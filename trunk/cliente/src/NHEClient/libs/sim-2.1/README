SIM : a C++ library for Discrete Event Simulation.

AUTHORS :
  D. Bolier, A.Eliens

COPYRIGHT :
  Contact the authors.

EMAIL :
  dbolier@cs.vu.nl, eliens@cs.vu.nl

COMPILER :
  The code has been developed with AT&T 3.0.1 and GNU.

DESCRIPTION :

A simulation is the execution in time of a model, represented by a 
computer program, that gives information about the system being 
investigated.
The library sim adopts the method of the Discrete Event Simulation. 
With this approach, the components of the model consist of events, 
which are activated at certain points in time and in this way affect 
the overall state of the system.  The points in time that an event is 
activated are randomized, so no input from outside the system is 
required. Events exist autonomously and they are discrete so between 
the execution of two events nothing happens. The library sim provides 
an event-based, as well as a process-oriented approach of writing a 
simulation program.  With the process-oriented approach, the components
of the program consist of entities, which combine several related 
events into one entity.
Sim is written in the C++ programming language. The library provides 
classes, that can be used by writing a C++ simulation program.  
We provided the library with such a functionality, that the resulting 
language is similar to SIMULA.
The library can be compiled to both a pure ASCII version as well as a
HUSH version. If you run the library in HUSH mode, you can use the
graphical features.

DIRECTORIES :
  doc : contains a postscript of the Users-Guide.
  examples : contains a variety of example programs.
  include : with the SIM header files.
  lib : contains SIM as an archive.
  man : with the manual pages.
  src : contains the SIM source files.
  tests : tests for the generator and probability distributions and for
          the event scheduling strategy.

FILES :
  Makefile : to install SIM.
  README : the file you are currently reading.
  xinfo : to browse the manual pages.
  sim.tar : a tar of SIM.

COMPILING :
  You should compile a simulation program (or make the library) with 
  a -DASCII definition when linking it to (or making) the ASCII version
  of the library. In the other case you should use the -DSIM and -DHUSH
  definitions.
  
INSTALLING SIM :
  To install the SIM package you need to adjust the SIM and HUSH
  paths in the *.mk files of the directories : examples, src
  and the current one, to the paths you have choosen to install the 
  package. You might also check these files to see if the right compiler
  options are set (see above).

QUESTIONS :
  send them to the authors.
